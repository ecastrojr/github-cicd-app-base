name: CI-CD üöÄ

on:
  push:
    branches: ["feature/Docker-github-actions"]
  workflow_dispatch:
jobs:
  teste:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Obter o c√≥digo do projeto
      uses: actions/checkout@v4

    - name: Change directory to app/
      run: cd app/

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  ci:
    runs-on: ubuntu-latest
    needs: [teste]
    steps:
      - name: Obter o c√≥digo do projeto
        uses: actions/checkout@v4

      - name: üîê Autenticar no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üõ†Ô∏è Constru√ß√£o da Imagem Docker üö¢
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/cicd-node-docker:v${{ github.run_number}}
            ${{ secrets.DOCKERHUB_USERNAME }}/cicd-node-docker:latest

  cd:
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - name: Obter o c√≥digo do projeto
        uses: actions/checkout@v4

      - name: Rodar o container Docker
        run: |
          docker run -d --name cicd-node-docker -p 3000:3000 ${{ secrets.DOCKERHUB_USERNAME }}/cicd-node-docker:v${{ github.run_number}}

      - name: Aguardar alguns segundos para garantir que o app esteja rodando
        run: sleep 10

      - name: Testar se o container est√° rodando corretamente
        run: |
          docker ps
          curl http://localhost:3000  # Verifique se a aplica√ß√£o est√° respondendo na porta 3000